@startuml

' Base classes and interfaces
abstract class BaseNode {
  - node_id: int
  - position: Position
  - state: bool
  - antennas: List[Antenna]
  - temperature: float
  - active_links: Dict
  + add_antenna(type: str, gain: float)
  + get_compatible_antenna(antenna: Antenna)
  + spectral_noise_density: float
  + turn_on()
  + turn_off()
  + tick(time: float)
}

class Position {
  + x: float
  + y: float
}

class Antenna {
  - antenna_type: str
  - gain: float
  + is_compatible_with(other: Antenna): bool
}

' Network nodes
class BaseStation {
}

class HAPS {
  - battery_capacity: int
  + {static} haps_altitude: float
  + {static} sky_visibility_angle: float
}

class LEO {
  - battery_capacity: int
  - current_angle: float
  + {static} leo_altitude: float
  + speed: float
  + angular_speed: float
  + tick(time: float)
}

class UserDevice {
}

' Network and Communication
class Network {
  - nodes: List[BaseNode]
  - communication_links: List[CommunicationLink]
  + add_node(node: BaseNode)
  - _update_communication_links()
  + tick()
}

class CommunicationLink {
  - node_a: BaseNode
  - node_b: BaseNode
  - total_bandwidth: float
  - signal_power: float
  - carrier_frequency: float
  - transmission_queue: List[Request]
  - request_progress: float
  + link_length: float
  + noise_power: float
  + calculate_capacity(): float
  + tick(time: float)
}

class Request {
  - data_size: int
}

' Simulation
class Simulation {
  - network: Network
  + set_base_stations(num: int)
  + set_haps(num: int)
  + set_users(num: int)
  + run()
  + reset()
}

' Earth utilities
class Earth {
  + {static} radius: float
  + {static} mass: float
  + {static} gravitational_constant: float
  + {static} calculate_position_from_angle()
  + {static} global_coordinate_to_local()
}

' Relationships
BaseNode <|-- BaseStation
BaseNode <|-- HAPS
BaseNode <|-- LEO
BaseNode <|-- UserDevice

BaseNode o-- Position
BaseNode o-- "0..*" Antenna

Network o-- "0..*" BaseNode
Network o-- "0..*" CommunicationLink

CommunicationLink o-- "2" BaseNode
CommunicationLink o-- "0..*" Request

Simulation *-- Network

@enduml